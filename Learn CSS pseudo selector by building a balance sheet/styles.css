html{
    box-sizing: border-box;
}

body{
    font-family: sans-serif;
    color: #0a0a23;
}

/*
The span[class~="sr-only"] method refers to a CSS selector that targets <span> elements with a specific class attribute value. In this case, it selects <span> elements that have the class "sr-only" applied to them.

The CSS selector span[class~="sr-only"] uses the attribute selector ~= to match elements that have a specific class in their class attribute. The ~= operator checks if the class attribute value is a space-separated list of words and matches any word within that list.
*/

span[class~="sr-only"]{
    border: 0!important;
    /*The CSS clip property is used to define the visible portions of an element.*/
    /*The clip-path property determines the shape the clip property should take. Set the clip-path property to the value of inset(50%), forming the clip-path into a rectangle within the element.*/
    clip: rect(1px,1px,1px,1px)!important;
    clip-path: inset(50%)!important;
    width: 1px!important;
    height: 1px!important;
    overflow: hidden!important;
    white-space: nowrap!important;
    position: absolute!important;
    padding: 0!important;
    margin: -1px!important;
}

h1{
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
    text-align: center;
}

h1 .flex{
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

/*The :first-of-type pseudo-selector is used to target the first element that matches the selector.*/
/*Remember that your span elements are reversed, visually, so this will appear to be the second element on the page.*/
h1 .flex span:first-of-type{
    font-size: 1.2em;
}

h1 .flex span:last-of-type{
    font-size: 2.0em;
}

section{
    max-width: 40rem;
    margin: 0 auto;
    border:2px solid #d0d0d5;
}

#years{
    display: flex;
    justify-content: flex-end;
    position:sticky;
    top:0;
    background: #0a0a23;
    color: #fff;
    margin:0 -2px;
    /*The calc() function is a CSS function that allows you to calculate a value based on other values. */
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
    z-index: 999;
}

#years span[class]{
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap{
    padding: 0 0.75rem 1.5rem 0.75rem;
}

/*because we use !important should we can use span all remaining*/
span/*:not(.sr-only)*/{
    font-weight: normal;
}

table{
    border-collapse: collapse;
    border: 0;
    width: 100%;
    margin-top: 3rem;
    position: relative;
}

table caption{
    font-weight: normal;
    color: #356eaf;
    font-size: 1.3em;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
    right: 0.5rem;
}

tbody td{
    width: 100vw;/*vw:viewport width*/
    min-width: 4rem;
    max-width: 4rem;
}

tbody th{
    width: calc(100% - 12rem);/*Now target the th elements within your table body, and give them a width of the entire container, less 12rem.*/
}
/*The key difference between tr[class="total"] and tr.total is that the first will select tr elements where the only class is total. The second will select tr elements where the class includes total.*/

tr[class="total"] {
    font-weight: bold;
    border-bottom: 4px double #0a0a23;
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

/*he :nth-of-type() pseudo-selector is used to target specific elements based on their order among siblings of the same type. Use this pseudo-selector to target the third td element within your total table rows.*/
tr.total td{
    text-align: right;
    padding: 0 0.25rem;
    padding-right: 0.5rem;
    font-weight: bold;
}

tr.total:hover{
    background: #99c9ff;
}

td.current{
    font-style: italic;
}

tr.data th{
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description{
    display: block;
    font-style: italic;
    font-weight: normal;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td{
    text-align: right;
    vertical-align: top;
    padding: 0.3rem 0.25rem 0;
}

tr.data td:last-of-type{
    padding-right: 0.5rem;
}