h1{
    text-align:center;
}

.marker{
    width:200px;
    height:25px;
    /*When the shorthand margin property has two values, it sets margin-top and margin-bottom to the first value, and margin-left and margin-right to the second value.*/
    margin:10px auto
}

.red{
    background: linear-gradient(rgb(122,74,14) ,rgb(245,62,113) ,rgb(162,27,27) );
    /*CSS gradients let you display smooth transitions between two or more specified colors.*/
    /*background-image: linear-gradient(direction, color-stop1, color-stop2, ...);*/
    /*To create a linear gradient you must define at least two color stops. Color stops are the colors you want to render smooth transitions among. You can also set a starting point and a direction (or an angle) along with the gradient effect.*/
    /*75% help determine limit of color*/
    /*The box-shadow property attaches one or more shadows to an element.*/
    /*box-shadow: offsetX offsetY blurRadius spreadRadius color;*/
    /*Like blurRadius, spreadRadius defaults to 0 if it isn't included.*/
    /*If a blurRadius value isn't included, it defaults to 0 and produces sharp edges. The higher the value of blurRadius, the greater the blurring effect is.*/
    /*both offsetX and offsetY accept number values in px and other CSS units*/
    /*a positive offsetX value moves the shadow right and a negative value moves it left*/
    /*a positive offsetY value moves the shadow down and a negative value moves it up*/
    /*if you want a value of zero (0) for any or both offsetX and offsetY, you don't need to add a unit. Every browser understands that zero means no change.*/
    box-shadow: 0px 0px 20px 0px rgba(83,14,14,0.8);
}

.green{
    /*background-color: rgb(0,255,0);*/
    /*hex color with the values 00 for red, FF for green, and 00 blue.*/
    /*With hex colors, 00 is 0% of that color, and FF is 100%. So #00FF00 translates to 0% red, 100% green, and 0% blue, and is the same as rgb(0, 255, 0).*/
    /*code hex: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F*/
    background: linear-gradient(#55680D,#71F53E,#116C31);
    box-shadow: 0px 0px 20px 0px #3B7E20CC;
}

.blue{
    /*background-color: rgb(0,0,255);*/
    /*The HSL color model, or hue, saturation, and lightness, is another way to represent colors.*/
    /*hsl(hue, saturation, lightness)*/
    /*Hue is a degree on the color wheel from 0 to 360. 0 (or 360) is red, 120 is green, 240 is blue.*/
    /*Saturation can be described as the intensity of a color. It is a percentage value from 0% to 100%.*/
    /*The lightness of a color can be described as how much light you want to give the color where 0% means no light (dark), 50% means 50% light (neither dark nor light), and 100% means full light.*/
    background: linear-gradient(hsl(186,76%,16%),hsl(223,90%,60%),hsl(240,56%,42%));
    box-shadow: 0px 0px 20px 0px hsla(223,59%,31%,0.8);
}

/*search gg to understand about rgb*/
/*rgb(red, green, blue);*/
/*Each red, green, and blue value is a number from 0 to 255. 0 means that there's 0% of that color, and is black. 255 means that there's 100% of that color.*/
.container{
    background-color: rgb(255,255,255);   
    /*similar margin*/
    /*padding: top right bottom left*/
    padding: 10px 0px 10px 0px;
}

.sleeve{
    width: 110px;
    height: 25px;
    /*You're already familiar with using the rgb function to set colors. To add an alpha channel to an rgb color, use the rgba function instead.*/
    /*rgba(redValue, greenValue, blueValue, alphaValue);*/
    background-color: rgba(255,255,255,50%);
    /*Opacity describes how opaque, or non-transparent, something is*/
    /*opacity: 0.5*/
    /*The border-color property sets the color of an element's four borders(duong vien).*/
    /*border-left-width: 10px;
    border-left-style: solid;
    border-left-color: black;*/
    /*The border-left shorthand property lets you to set the left border's width, style, and color at the same time.*/
    /*border-left: width style color;*/
    border-left: 10px double rgba(0,0,0,75%);
}

.cap{
    width: 60px;
    height: 25px;
}

/*help sleeve and cap display in same a line block*/
.sleeve,.cap{
    display: inline-block;
}